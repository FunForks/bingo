// const ServerResponse  = {
//   _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
//   _eventsCount: 1,
//   _maxListeners: undefined,
//   outputData: [],
//   outputSize: 0,
//   writable: true,
//   destroyed: false,
//   _last: false,
//   chunkedEncoding: false,
//   shouldKeepAlive: true,
//   maxRequestsOnConnectionReached: false,
//   _defaultKeepAlive: true,
//   useChunkedEncodingByDefault: true,
//   sendDate: true,
//   _removedConnection: false,
//   _removedContLen: false,
//   _removedTE: false,
//   _contentLength: null,
//   _hasBody: true,
//   _trailer: '',
//   finished: false,
//   _headerSent: false,
//   _closed: false,
//   socket: <ref *1> Socket {
//     connecting: false,
//     _hadError: false,
//     _parent: null,
//     _host: null,
//     _readableState: ReadableState {
//       objectMode: false,
//       highWaterMark: 16384,
//       buffer: BufferList { head: null, tail: null, length: 0 },
//       length: 0,
//       pipes: [],
//       flowing: true,
//       ended: false,
//       endEmitted: false,
//       reading: true,
//       constructed: true,
//       sync: false,
//       needReadable: true,
//       emittedReadable: false,
//       readableListening: false,
//       resumeScheduled: false,
//       errorEmitted: false,
//       emitClose: false,
//       autoDestroy: true,
//       destroyed: false,
//       errored: null,
//       closed: false,
//       closeEmitted: false,
//       defaultEncoding: 'utf8',
//       awaitDrainWriters: null,
//       multiAwaitDrain: false,
//       readingMore: false,
//       dataEmitted: false,
//       decoder: null,
//       encoding: null,
//       [Symbol(kPaused)]: false
//     },
//     _events: [Object: null prototype] {
//       end: [Array],
//       timeout: [Function: socketOnTimeout],
//       data: [Function: bound socketOnData],
//       error: [Function: socketOnError],
//       close: [Array],
//       drain: [Function: bound socketOnDrain],
//       resume: [Function: onSocketResume],
//       pause: [Function: onSocketPause]
//     },
//     _eventsCount: 8,
//     _maxListeners: undefined,
//     _writableState: WritableState {
//       objectMode: false,
//       highWaterMark: 16384,
//       finalCalled: false,
//       needDrain: false,
//       ending: false,
//       ended: false,
//       finished: false,
//       destroyed: false,
//       decodeStrings: false,
//       defaultEncoding: 'utf8',
//       length: 0,
//       writing: false,
//       corked: 0,
//       sync: true,
//       bufferProcessing: false,
//       onwrite: [Function: bound onwrite],
//       writecb: null,
//       writelen: 0,
//       afterWriteTickInfo: null,
//       buffered: [],
//       bufferedIndex: 0,
//       allBuffers: true,
//       allNoop: true,
//       pendingcb: 0,
//       constructed: true,
//       prefinished: false,
//       errorEmitted: false,
//       emitClose: false,
//       autoDestroy: true,
//       errored: null,
//       closed: false,
//       closeEmitted: false,
//       [Symbol(kOnFinished)]: []
//     },
//     allowHalfOpen: true,
//     _sockname: null,
//     _pendingData: null,
//     _pendingEncoding: '',
//     server: Server {
//       maxHeaderSize: undefined,
//       insecureHTTPParser: undefined,
//       _events: [Object: null prototype],
//       _eventsCount: 4,
//       _maxListeners: undefined,
//       _connections: 2,
//       _handle: [TCP],
//       _usingWorkers: false,
//       _workers: [],
//       _unref: false,
//       allowHalfOpen: true,
//       pauseOnConnect: false,
//       httpAllowHalfOpen: false,
//       timeout: 0,
//       keepAliveTimeout: 5000,
//       maxHeadersCount: null,
//       maxRequestsPerSocket: 0,
//       headersTimeout: 60000,
//       requestTimeout: 0,
//       _connectionKey: '6::::3000',
//       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
//       [Symbol(ServerResponse)]: [Function: ServerResponse],
//       [Symbol(kCapture)]: false,
//       [Symbol(async_id_symbol)]: 5
//     },
//     _server: Server {
//       maxHeaderSize: undefined,
//       insecureHTTPParser: undefined,
//       _events: [Object: null prototype],
//       _eventsCount: 4,
//       _maxListeners: undefined,
//       _connections: 2,
//       _handle: [TCP],
//       _usingWorkers: false,
//       _workers: [],
//       _unref: false,
//       allowHalfOpen: true,
//       pauseOnConnect: false,
//       httpAllowHalfOpen: false,
//       timeout: 0,
//       keepAliveTimeout: 5000,
//       maxHeadersCount: null,
//       maxRequestsPerSocket: 0,
//       headersTimeout: 60000,
//       requestTimeout: 0,
//       _connectionKey: '6::::3000',
//       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
//       [Symbol(ServerResponse)]: [Function: ServerResponse],
//       [Symbol(kCapture)]: false,
//       [Symbol(async_id_symbol)]: 5
//     },
//     parser: HTTPParser {
//       '0': [Function: bound setRequestTimeout],
//       '1': [Function: parserOnHeaders],
//       '2': [Function: parserOnHeadersComplete],
//       '3': [Function: parserOnBody],
//       '4': [Function: parserOnMessageComplete],
//       '5': [Function: bound onParserExecute],
//       '6': [Function: bound onParserTimeout],
//       _headers: [],
//       _url: '',
//       socket: [Circular *1],
//       incoming: [IncomingMessage],
//       outgoing: null,
//       maxHeaderPairs: 2000,
//       _consumed: true,
//       onIncoming: [Function: bound parserOnIncoming],
//       [Symbol(owner_symbol)]: [HTTPServerAsyncResource]
//     },
//     on: [Function: socketListenerWrap],
//     addListener: [Function: socketListenerWrap],
//     prependListener: [Function: socketListenerWrap],
//     setEncoding: [Function: socketSetEncoding],
//     _paused: false,
//     _httpMessage: [Circular *2],
//     [Symbol(async_id_symbol)]: 99,
//     [Symbol(kHandle)]: TCP {
//       reading: true,
//       onconnection: null,
//       _consumed: true,
//       [Symbol(owner_symbol)]: [Circular *1]
//     },
//     [Symbol(kSetNoDelay)]: false,
//     [Symbol(lastWriteQueueSize)]: 0,
//     [Symbol(timeout)]: null,
//     [Symbol(kBuffer)]: null,
//     [Symbol(kBufferCb)]: null,
//     [Symbol(kBufferGen)]: null,
//     [Symbol(kCapture)]: false,
//     [Symbol(kBytesRead)]: 0,
//     [Symbol(kBytesWritten)]: 0,
//     [Symbol(RequestTimeout)]: undefined
//   },
//   _header: null,
//   _keepAliveTimeout: 5000,
//   _onPendingData: [Function: bound updateOutgoingData],
//   req: IncomingMessage {
//     _readableState: ReadableState {
//       objectMode: false,
//       highWaterMark: 16384,
//       buffer: BufferList { head: null, tail: null, length: 0 },
//       length: 0,
//       pipes: [],
//       flowing: null,
//       ended: true,
//       endEmitted: false,
//       reading: false,
//       constructed: true,
//       sync: true,
//       needReadable: false,
//       emittedReadable: false,
//       readableListening: false,
//       resumeScheduled: false,
//       errorEmitted: false,
//       emitClose: true,
//       autoDestroy: true,
//       destroyed: false,
//       errored: null,
//       closed: false,
//       closeEmitted: false,
//       defaultEncoding: 'utf8',
//       awaitDrainWriters: null,
//       multiAwaitDrain: false,
//       readingMore: true,
//       dataEmitted: false,
//       decoder: null,
//       encoding: null,
//       [Symbol(kPaused)]: null
//     },
//     _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
//     _eventsCount: 1,
//     _maxListeners: undefined,
//     socket: <ref *1> Socket {
//       connecting: false,
//       _hadError: false,
//       _parent: null,
//       _host: null,
//       _readableState: [ReadableState],
//       _events: [Object: null prototype],
//       _eventsCount: 8,
//       _maxListeners: undefined,
//       _writableState: [WritableState],
//       allowHalfOpen: true,
//       _sockname: null,
//       _pendingData: null,
//       _pendingEncoding: '',
//       server: [Server],
//       _server: [Server],
//       parser: [HTTPParser],
//       on: [Function: socketListenerWrap],
//       addListener: [Function: socketListenerWrap],
//       prependListener: [Function: socketListenerWrap],
//       setEncoding: [Function: socketSetEncoding],
//       _paused: false,
//       _httpMessage: [Circular *2],
//       [Symbol(async_id_symbol)]: 99,
//       [Symbol(kHandle)]: [TCP],
//       [Symbol(kSetNoDelay)]: false,
//       [Symbol(lastWriteQueueSize)]: 0,
//       [Symbol(timeout)]: null,
//       [Symbol(kBuffer)]: null,
//       [Symbol(kBufferCb)]: null,
//       [Symbol(kBufferGen)]: null,
//       [Symbol(kCapture)]: false,
//       [Symbol(kBytesRead)]: 0,
//       [Symbol(kBytesWritten)]: 0,
//       [Symbol(RequestTimeout)]: undefined
//     },
//     httpVersionMajor: 1,
//     httpVersionMinor: 1,
//     httpVersion: '1.1',
//     complete: true,
//     rawHeaders: [
//       'Host',
//       'localhost:3000',
//       'Connection',
//       'keep-alive',
//       'sec-ch-ua',
//       '"Not_A Brand";v="99", "Google Chrome";v="109", "Chromium";v="109"',
//       'DNT',
//       '1',
//       'sec-ch-ua-mobile',
//       '?0',
//       'User-Agent',
//       'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36',
//       'sec-ch-ua-platform',
//       '"macOS"',
//       'Accept',
//       '*/*',
//       'Origin',
//       'http://localhost:3001',
//       'Sec-Fetch-Site',
//       'same-site',
//       'Sec-Fetch-Mode',
//       'cors',
//       'Sec-Fetch-Dest',
//       'empty',
//       'Referer',
//       'http://localhost:3001/',
//       'Accept-Encoding',
//       'gzip, deflate, br',
//       'Accept-Language',
//       'en-GB,en-US;q=0.9,en;q=0.8',
//       'If-None-Match',
//       'W/"2-nOO9QiTIwXgNtWtBJezz8kv3SLc"'
//     ],
//     rawTrailers: [],
//     aborted: false,
//     upgrade: false,
//     url: '/start',
//     method: 'GET',
//     statusCode: null,
//     statusMessage: null,
//     client: <ref *1> Socket {
//       connecting: false,
//       _hadError: false,
//       _parent: null,
//       _host: null,
//       _readableState: [ReadableState],
//       _events: [Object: null prototype],
//       _eventsCount: 8,
//       _maxListeners: undefined,
//       _writableState: [WritableState],
//       allowHalfOpen: true,
//       _sockname: null,
//       _pendingData: null,
//       _pendingEncoding: '',
//       server: [Server],
//       _server: [Server],
//       parser: [HTTPParser],
//       on: [Function: socketListenerWrap],
//       addListener: [Function: socketListenerWrap],
//       prependListener: [Function: socketListenerWrap],
//       setEncoding: [Function: socketSetEncoding],
//       _paused: false,
//       _httpMessage: [Circular *2],
//       [Symbol(async_id_symbol)]: 99,
//       [Symbol(kHandle)]: [TCP],
//       [Symbol(kSetNoDelay)]: false,
//       [Symbol(lastWriteQueueSize)]: 0,
//       [Symbol(timeout)]: null,
//       [Symbol(kBuffer)]: null,
//       [Symbol(kBufferCb)]: null,
//       [Symbol(kBufferGen)]: null,
//       [Symbol(kCapture)]: false,
//       [Symbol(kBytesRead)]: 0,
//       [Symbol(kBytesWritten)]: 0,
//       [Symbol(RequestTimeout)]: undefined
//     },
//     _consuming: false,
//     _dumped: false,
//     next: [Function: next],
//     baseUrl: '/data',
//     originalUrl: '/data/start',
//     _parsedUrl: Url {
//       protocol: null,
//       slashes: null,
//       auth: null,
//       host: null,
//       port: null,
//       hostname: null,
//       hash: null,
//       search: null,
//       query: null,
//       pathname: '/start',
//       path: '/start',
//       href: '/start',
//       _raw: '/start'
//     },
//     params: {},
//     query: {},
//     res: [Circular *2],
//     body: {},
//     secret: undefined,
//     cookies: [Object: null prototype] {},
//     signedCookies: [Object: null prototype] {},
//     _parsedOriginalUrl: Url {
//       protocol: null,
//       slashes: null,
//       auth: null,
//       host: null,
//       port: null,
//       hostname: null,
//       hash: null,
//       search: null,
//       query: null,
//       pathname: '/data/start',
//       path: '/data/start',
//       href: '/data/start',
//       _raw: '/data/start'
//     },
//     route: Route { path: '/start', stack: [Array], methods: [Object] },
//     [Symbol(kCapture)]: false,
//     [Symbol(kHeaders)]: {
//       host: 'localhost:3000',
//       connection: 'keep-alive',
//       'sec-ch-ua': '"Not_A Brand";v="99", "Google Chrome";v="109", "Chromium";v="109"',
//       dnt: '1',
//       'sec-ch-ua-mobile': '?0',
//       'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36',
//       'sec-ch-ua-platform': '"macOS"',
//       accept: '*/*',
//       origin: 'http://localhost:3001',
//       'sec-fetch-site': 'same-site',
//       'sec-fetch-mode': 'cors',
//       'sec-fetch-dest': 'empty',
//       referer: 'http://localhost:3001/',
//       'accept-encoding': 'gzip, deflate, br',
//       'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',
//       'if-none-match': 'W/"2-nOO9QiTIwXgNtWtBJezz8kv3SLc"'
//     },
//     [Symbol(kHeadersCount)]: 32,
//     [Symbol(kTrailers)]: null,
//     [Symbol(kTrailersCount)]: 0,
//     [Symbol(RequestTimeout)]: undefined
//   },
//   _sent100: false,
//   _expect_continue: false,
//   locals: [Object: null prototype] {},
//   [Symbol(kCapture)]: false,
//   [Symbol(kNeedDrain)]: false,
//   [Symbol(corked)]: 0,
//   [Symbol(kOutHeaders)]: [Object: null prototype] {
//     'x-powered-by': [ 'X-Powered-By', 'Express' ],
//     'access-control-allow-origin': [ 'Access-Control-Allow-Origin', '*' ]
//   }
// }
